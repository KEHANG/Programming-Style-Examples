# Verify that we can open and read the election results CSV correctly# Showing a "test-driven" stylefrom electiondata import ElectionResults, ElectionCollectionimport unittestimport jsonclass ElectionResultsTest(unittest.TestCase):    def setUp(self):        self.results = ElectionResults('election_results_test_file.csv')        self.collections = ElectionCollection(            'http://www.archives.gov/federal-register/electoral-college/2012/popular-vote.html')    def testLoad(self):        self.results.load()        assert self.results != None        assert self.results.file != None    def testStateCount(self):        self.results.load()        state_count = self.results.state_count()        assert state_count == 2    def testStates(self):        self.results.load()        names = self.results.states()        assert len(names) == 2        assert names[0] == 'Alaska'        assert names[1] == 'Alabama'    def testAddCandidates(self):        self.results.load()        self.results.addCandidates()        assert self.results.candidates[0] == 'Obama'        assert self.results.candidates[1] == 'Romney'    def testAddTotalVotes(self):        self.results.load()        self.results.addCandidates()        self.results.addTotalVotes()        assert self.results.totalVotes['Obama'] == 885316        assert self.results.totalVotes['Romney'] == 1373687    def testCollectToFile(self):        self.collections.collectToFile('electionCollection.csv')        self.collections.collectToFile('electionCollection.json')        self.resultsNew = ElectionResults('electionCollection.csv')        self.resultsNew.load()        assert self.resultsNew.all_lines[1].strip() == 'AL,795696,1255925,12328,3397,6992,2074338'        assert self.resultsNew.all_lines[-1].strip() == 'WY,69286,170962,5326,-,3487,249061'        with open('electionCollection.json', 'r') as jsonFile:            data = json.load(jsonFile)            assert data[0]['State'] == 'AL'# if this file is run directly, run the testsif __name__ == "__main__":    unittest.main()